<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<bean id="Operator" class="pl.utils.Operator" />

	<camel:camelContext>
		
		<camel:errorHandler id="EparkingNEH" type="NoErrorHandler" />
		
		<camel:dataFormats>
			<camel:jaxb id="CurrentServiceDF" contextPath="pl.eparking.parkingservice" prettyPrint="true" />
			<camel:jaxb id="ParkingAplikacjaDF" contextPath="pl.eparking.api.aplikacja" prettyPrint="true" />
		</camel:dataFormats>
		
		<camel:restConfiguration component="servlet" bindingMode="json"/>
		
		<camel:rest path="/control" id="ControlServiceAdapterRest">
			<camel:post>
				<camel:to uri="vm:ControlServiceAdapterControlParking"/>
			</camel:post>
		</camel:rest>
		
		<camel:route id="ControlServiceAdapterControlParking">
			<camel:from uri="vm:ControlServiceAdapterControlParking" />
			<camel:doTry>
			<camel:setHeader headerName="workerRoute"><camel:simple>${routeId}</camel:simple></camel:setHeader>
			<camel:bean ref="Operator" method="controlParkingAdapterValidate(${headers})" />
			<camel:bean ref="Operator" method="controlParkingRestToControlParking(${headers})" />
			<camel:setHeader headerName="masterClass"><camel:simple>${body.getClass().getName()}</camel:simple></camel:setHeader>
			<camel:setHeader headerName="workerClass"><camel:simple>${body.getClass().getName()}</camel:simple></camel:setHeader>
			<camel:wireTap uri="vm:EparkingLogger" />
			<camel:to uri="vm:ControlServiceBaseControlParking" />
			<camel:removeHeaders pattern="*" excludePattern="Control*" />
			<camel:when>
				<camel:simple>${body.getFine()} != null</camel:simple>
				<camel:setHeader headerName="Control-id"><camel:simple>${body.getFine().getControlId()}</camel:simple></camel:setHeader>
				<camel:setHeader headerName="Control-fine-id"><camel:simple>${body.getFine().getFineId()}</camel:simple></camel:setHeader>
				<camel:setHeader headerName="Control-fine-amount"><camel:simple>${body.getFine().getFineAmount()}</camel:simple></camel:setHeader>
				<camel:setHeader headerName="Control-fine-type"><camel:simple>${body.getFine().getFineType()}</camel:simple></camel:setHeader>
			</camel:when>
			<camel:setHeader headerName="CamelHttpResponseCode"><camel:simple>200</camel:simple></camel:setHeader>
			<camel:doCatch>
				<camel:exception>java.lang.IllegalArgumentException</camel:exception>
				<camel:handled><camel:constant>true</camel:constant></camel:handled>
				<camel:to uri="vm:ErrorHandlerAdapter" />
				<!-- <camel:to uri="activemq:queue:ControlParkingDLQ?disableReplyTo=true" /> -->
				<camel:setHeader headerName="CamelHttpResponseCode"><camel:simple>400</camel:simple></camel:setHeader>
			</camel:doCatch>
			<camel:doCatch>
				<camel:exception>java.lang.Exception</camel:exception>
				<camel:handled><camel:constant>true</camel:constant></camel:handled>
				<camel:to uri="vm:ErrorHandlerAdapter" />
				<!-- <camel:to uri="activemq:queue:ControlParkingDLQ?disableReplyTo=true" /> -->
				<camel:setHeader headerName="CamelHttpResponseCode"><camel:simple>500</camel:simple></camel:setHeader>
			</camel:doCatch>
			<camel:doFinally>
				<camel:setBody><camel:constant>control_added</camel:constant></camel:setBody>
			</camel:doFinally>
			</camel:doTry>
		</camel:route>
		
		<camel:route id="ControlServiceBaseControlParking" errorHandlerRef="EparkingNEH">
			<camel:from uri="vm:ControlServiceBaseControlParking" />
			<camel:setHeader headerName="workerClass"><camel:simple>${body.getClass().getName()}</camel:simple></camel:setHeader>
			<camel:setHeader headerName="workerRoute"><camel:simple>${routeId}</camel:simple></camel:setHeader>
			<camel:wireTap uri="vm:EparkingLogger" />
			<camel:setProperty propertyName="controlParking"><camel:simple>${body}</camel:simple></camel:setProperty>
			<camel:setHeader headerName="requestOriginal"><camel:simple>${exchangeProperty.controlParking}</camel:simple></camel:setHeader>
			<camel:bean ref="Operator" method="controlParkingToAddControl(${exchangeProperty.controlParking})" />
			<camel:to uri="vm:ParkingServiceConnectorAddControl" />
			<camel:bean ref="Operator" method="updateControl(${body.getControl().getControlId()}, ${exchangeProperty.control})" />
			<camel:setProperty propertyName="control"><camel:simple>${body}</camel:simple></camel:setProperty>
			<camel:bean ref="Operator" method="controlParkingToFindAccount(${exchangeProperty.controlParking})" />
			<camel:to uri="vm:AccountServiceConnectorFindAccount" />
			<camel:setProperty propertyName="fineType"><camel:simple>null</camel:simple></camel:setProperty>
			<camel:when>
				<camel:simple>${body.getAccount()} != null</camel:simple>
				<camel:setProperty propertyName="account"><camel:simple>${body.getAccount()}</camel:simple></camel:setProperty>
				<camel:choice>
				<camel:when>
					<camel:simple>${body.getAccount().getAccountStatusType} != 'new'</camel:simple>
					<camel:setProperty propertyName="fineType"><camel:constant>inactiveAccount</camel:constant></camel:setProperty>
				</camel:when>
				<camel:otherwise>
					<camel:bean ref="Operator" method="controlParkingToGetBill(${exchangeProperty.controlParking}, ${exchangeProperty.account})" />
					<camel:to uri="vm:BillServiceConnectorGetBill" />
					<camel:setProperty propertyName="bill"><camel:simple>${body.getBill()}</camel:simple></camel:setProperty>
					<camel:bean ref="Operator" method="controlParkingToGetParking(${exchangeProperty.controlParking}, ${exchangeProperty.account.getAccountId()})" />
					<camel:to uri="vm:ParkingServiceConnectorGetParking" />
					<camel:choice>
						<camel:when>
							<camel:simple>${body.getParking()} != null</camel:simple>
							<camel:setProperty propertyName="parking"><camel:constant>${body.getParking()}</camel:constant></camel:setProperty>
						</camel:when>
						<camel:otherwise>
							<camel:setProperty propertyName="fineType"><camel:constant>inactiveParking</camel:constant></camel:setProperty>
						</camel:otherwise>					
					</camel:choice>
				</camel:otherwise>
				</camel:choice>
			</camel:when>
			<camel:choice>
			<camel:when>
				<camel:simple>${exchangeProperty.fineType} != null</camel:simple>
				<camel:setProperty propertyName="fineAmount"><camel:method ref="Operator" method="calculateFine(${exchangeProperty.fineType})" ></camel:method></camel:setProperty>
				<camel:bean ref="Operator" method="controlParkingToRechargeBill(${exchangeProperty.controlParking}, ${exchangeProperty.account}, ${exchangeProperty.fineAmount})" />
				<camel:to uri="vm:BillServiceBaseRechargeBill" />
				<camel:bean ref="Operator" method="controlParkingToAddFine(${exchangeProperty.controlParking}, ${exchangeProperty.fineAmount}, ${exchangeProperty.fineType}, ${exchangeProperty.account.getAccountId()}, ${exchangeProperty.control.getControlId()})" />
				<camel:to uri="vm:ParkingServiceConnectorAddFine" />
				<camel:when>
					<camel:simple>${body.getFine()} != null</camel:simple>
					<camel:setProperty propertyName="fineId"><camel:simple>${body.getFine().getFineId()}</camel:simple></camel:setProperty>
				</camel:when>
				<camel:bean ref="Operator" method="controlParkingResponseFine(${exchangeProperty.fineId}, ${exchangeProperty.account.getAccountId()}, ${exchangeProperty.control.getControlId()}, ${exchangeProperty.fineAmount}, ${exchangeProperty.fineType})" />
			</camel:when>
			<camel:otherwise>
				<camel:bean ref="Operator" method="controlParkingResponseNoFine(${exchangeProperty.control.getControlId()})" />
			</camel:otherwise>
			</camel:choice>
			<camel:setHeader headerName="workerClass"><camel:simple>${headers.masterClass}</camel:simple></camel:setHeader>
			<camel:wireTap uri="vm:EparkingLogger" />
		</camel:route>
		
	</camel:camelContext>


</beans>

